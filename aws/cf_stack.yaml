AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  myVariable:
    Type: String
    Default: iotmii
    MaxLength: '50'
    MinLength: '3'
 
Resources:

    IOTVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/16
        InstanceTenancy: default
        EnableDnsSupport: true
        EnableDnsHostnames: true
        Tags:
          - Key: environment
            Value: mii-iot
          - Key: Name
            Value: !Join ['-', [IOTVPC, !Ref 'myVariable']]

    PublicSubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        CidrBlock: 10.0.0.0/24
        AvailabilityZone:
          Fn::Select:
            - 0
            - Fn::GetAZs: !Ref AWS::Region
        MapPublicIpOnLaunch: true
        VpcId: !Ref 'IOTVPC'
        Tags:
          - Key: environment
            Value: mii-iot
          - Key: Name
            Value: !Join ['-', [PublicSubnetA, !Ref 'myVariable']]

    IOTIGW:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: environment
            Value: mii-iot
          - Key: Name
            Value: !Join ['-', [IGW, !Ref 'myVariable']]

    IOTNetworkACL:
      Type: AWS::EC2::NetworkAcl
      Properties:
        VpcId: !Ref 'IOTVPC'
        Tags:
          - Key: environment
            Value: mii-iot
          - Key: Name
            Value: !Join ['-', [NACL, !Ref 'myVariable']]

    IOTRoutePublic:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref 'IOTVPC'
        Tags:
          - Key: environment
            Value: mii-iot
          - Key: Name
            Value: !Join ['-', [PublicRoute, !Ref 'myVariable']]

    IOTRoutePrivate:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref 'IOTVPC'
        Tags:
          - Key: environment
            Value: mii-iot
          - Key: Name
            Value: !Join ['-', [PrivateRoute, !Ref 'myVariable']]

    IOTkeyPair:
      Type: 'AWS::EC2::KeyPair'
      Properties:
        KeyName: IOTkeyPair
        PublicKeyMaterial: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC1RHFBxjydO7oiYqAL13XqREnDR/ZH8Cd5bIMEq+D411ESoVVUyiPfuVQYzKruQsrGig/JEKSNUy+HaNPf/U0HYITpGmh4OYEWHo9Wqb2blSEN7vOGR2FORc5gg7CcAndvET5D1VQEOOrpVQShUOaJBDheQqgPrXeNB8UE0AU4YPG4TRvPqFa4qqsW/NiZLzAtBAsXrfD5myFrv+VnGphAdnFQo4f1cL0UkrrMCl9WOnIPt8Q/Ce1E4ilIXzKup7//ks4eo/nLixOipAfc7cr+imk5MIilcCRB49HpyEGWY0+5iBRvs7x8Po/BgoWcKOGNkVwI1x6CgmIExGuCJPAEEdd5guAhlRyrBAkhj/jN4u59swcfwUgHj8oZTEPkRRi7HU34kFm7wZcH2J5lNAUuWp/K0o5AAq0C2KSwL7p6zDkdwfhqwH29FhzT87kioCJQ68tgi/cMVHRuQhe3BH7/YXp8KB1HEHk+KKOYLjXeYuwwwgAuLNNBZT7ZX/PClkk=

    IOTInstance1:
      Type: AWS::EC2::Instance
      Properties:
        DisableApiTermination: false
        InstanceInitiatedShutdownBehavior: stop
        ImageId: ami-0096528c9fcc1a6a9
        InstanceType: t2.medium
        Monitoring: false
        KeyName: !Ref IOTkeyPair
        Tags:
          - Key: environment
            Value: mii-iot
          - Key: Name
            Value: !Join ['-', [Instance1, !Ref 'myVariable']]
        NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeleteOnTermination: true
          Description: Primary network interface
          DeviceIndex: '0'
          SubnetId: !Ref 'PublicSubnetA'
          GroupSet: [!Ref 'IOTSGapp']

    IOTSGapp:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: App server security group
        VpcId: !Ref 'IOTVPC'
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            FromPort: 0
            IpProtocol: tcp
            ToPort: 65535
        SecurityGroupEgress:
          - CidrIp: 0.0.0.0/0
            FromPort: 0
            IpProtocol: tcp
            ToPort: 65535
        Tags:
          - Key: environment
            Value: mii-iot
          - Key: Name
            Value: AppServerSecurityGroup

    IOTNACLEntry1:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        CidrBlock: 0.0.0.0/0
        Egress: true
        Protocol: -1
        RuleAction: allow
        RuleNumber: 100
        NetworkAclId: !Ref 'IOTNetworkACL'

    IOTNACLEntry2:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: -1
        RuleAction: allow
        RuleNumber: 100
        NetworkAclId: !Ref 'IOTNetworkACL'

    subnetacl1:
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        NetworkAclId: !Ref 'IOTNetworkACL'
        SubnetId: !Ref 'PublicSubnetA'

    IOTIGWAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref 'IOTVPC'
        InternetGatewayId: !Ref 'IOTIGW'

    subnetRoutePublicA:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref 'IOTRoutePublic'
        SubnetId: !Ref 'PublicSubnetA'

    publicroute:
      Type: AWS::EC2::Route
      Properties:
        DestinationCidrBlock: 0.0.0.0/0
        RouteTableId: !Ref 'IOTRoutePublic'
        GatewayId: !Ref 'IOTIGW'
